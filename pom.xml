<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>pub.timelyrain</groupId>
    <artifactId>logmining</artifactId>
    <version>0.1</version>
    <name>oracle-logmining</name>
    <description>mining oracle archivelog for sync data</description>

    <properties>
        <java.version>1.8</java.version>
        <skipTests>true</skipTests>
        <!--docker build and push properties -->
        <docker.hub>hub.pt.ciic</docker.hub>
        <docker.hub.url>https://${docker.hub}</docker.hub.url>
        <docker.hub.auth>hub.pt.ciic</docker.hub.auth>
        <docker.hub.push.project>wage</docker.hub.push.project>
        <docker.image.prefix>master</docker.image.prefix>
        <docker.image.base>hub.pt.ciic/wage/base-image:1.0</docker.image.base>
        <xxl-job.version>2.2.0</xxl-job.version>
        <netty-all.version>4.1.48.Final</netty-all.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-test</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.jsqlparser</groupId>
            <artifactId>jsqlparser</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.easyproject</groupId>
            <artifactId>orai18n</artifactId>
            <version>12.1.0.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <!--            springboot 打包-->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <finalName>${project.name}-${project.version}</finalName>
                        </configuration>

                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <configuration>
                                    <tasks>
                                        <copy todir="src/main/docker/" file="target/${project.name}-${project.version}.jar"></copy>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>master</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!--            springboot 打包-->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <!--            docker 镜像 打包-->
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>1.6.1</version>
                        <configuration>
                            <from>
                                <image>${docker.image.base}</image>
                            </from>
                            <to>
                                <image>${docker.hub}/${docker.hub.push.project}/${docker.image.prefix}-${project.name}:latest</image>
                            </to>
                            <container>
                                <entrypoint>
                                    <arg>/bin/sh</arg>
                                    <arg>-c</arg>
                                    <arg>/dockerize -timeout 180s java ${JAVA_OPTS} -cp /app/resources/:/app/classes/:/app/libs/* pub.timelyrain.logmining.OracleMiningApplication</arg>
                                </entrypoint>
                            </container>
                            <allowInsecureRegistries>true</allowInsecureRegistries>
                        </configuration>
                        <!--                设置maven项目package时build镜像-->
                        <executions>
                            <execution>
                                <id>build-and-push-docker-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
